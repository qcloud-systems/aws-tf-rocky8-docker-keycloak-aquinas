resource "aws_lb" "keycloak-alb" {
  name               = "${var.entity}-${var.environment}-alb"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.sg_lb_keycloak.id]
  subnets            = [aws_subnet.public-subnet-1.id, aws_subnet.public-subnet-2.id]

  enable_deletion_protection = false

  tags = {
    Name    = "${var.entity}-${var.environment}-keycloak-alb"
    qcs-use = "alb"
  }
}
resource "aws_lb_target_group" "keycloak-alb-tg" {
  name = "${var.entity}-${var.environment}-alb-tg"
  port = 8443
  #port     = 8080
  protocol = "HTTPS"
  #protocol = "HTTP"
  vpc_id = aws_vpc.main-vpc.id
  health_check {
    path = "/login"
  }
  tags = {
    qcs-use = "alb-tg"
  }
}
resource "aws_lb_listener" "front_end_https_listen" {
  load_balancer_arn = aws_lb.keycloak-alb.arn
  #port              = "8443"
  port            = "443"
  protocol        = "HTTPS"
  ssl_policy      = "ELBSecurityPolicy-FS-1-2-Res-2020-10"
  certificate_arn = var.site_certificate_arn

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.keycloak-alb-tg.arn
  }
}
resource "aws_lb_listener" "front_end_http_listen" {
  load_balancer_arn = aws_lb.keycloak-alb.arn
  port              = "80"
  protocol          = "HTTP"

  default_action {
    type = "redirect"

    redirect {
      port = "8443"
      #port        = "443"
      protocol    = "HTTPS"
      status_code = "HTTP_301"
    }
  }
}
resource "aws_lb" "keycloak-nlb" {
  name               = "${var.entity}-${var.environment}-nlb"
  load_balancer_type = "network"

  subnet_mapping {
    subnet_id     = aws_subnet.public-subnet-1.id
    allocation_id = aws_eip.elastic-ip-for-nlb.id
  }

  tags = {
    qcs-use = "nlb"
  }

}
resource "aws_eip" "elastic-ip-for-nlb" {
  vpc = true
  tags = {
    Name    = "${var.entity}-${var.environment}-EIP-LB"
    qcs-use = "elastic-ip-for-nlb"
  }
}
resource "aws_lb_target_group" "keycloak-nlb-tg" {
  name        = "${var.entity}-${var.environment}-keycloak-nlb-tg"
  target_type = "alb"
  port        = 80
  protocol    = "TCP"
  vpc_id      = aws_vpc.main-vpc.id
  health_check {
    path = "/login"
  }
}
resource "aws_lb_listener" "front_end_http_listen_nlb" {
  load_balancer_arn = aws_lb.keycloak-nlb.arn
  port              = "80"
  protocol          = "TCP"

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.keycloak-nlb-tg.arn
  }
}
resource "aws_route53_record" "keycloak-a" {
  zone_id = var.site_zone_id
  name    = "${var.entity}.${var.domain_name}"
  type    = "A"

  alias {
    name                   = aws_lb.keycloak-nlb.dns_name
    zone_id                = aws_lb.keycloak-nlb.zone_id
    evaluate_target_health = false
  }
}
resource "aws_lb_target_group" "keycloak-nlb-ssl-tg" {
  name        = "${var.entity}-${var.environment}-nlb-ssl-tg"
  target_type = "alb"
  #port        = 8443
  port     = 443
  protocol = "TCP"
  vpc_id   = aws_vpc.main-vpc.id
  health_check {
    path     = "/login"
    protocol = "HTTPS"
  }
}
resource "aws_lb_listener" "front_end_https_listen_nlb" {
  load_balancer_arn = aws_lb.keycloak-nlb.arn
  #port              = "8443"
  port     = "443"
  protocol = "TCP"

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.keycloak-nlb-ssl-tg.arn
  }
}
variable "domain_name" {
  type        = string
  description = "The name of the domain"
  default     = "villasfoundation.com"
}

##Step 2 - Add attachments
/*
resource "aws_lb_target_group_attachment" "keycloak-tg-attachment8080" {
  target_group_arn = aws_lb_target_group.keycloak-alb-tg.arn
  target_id        = aws_instance.keycloak-master-instance.id
  port             = 8443
  #port             = 8080
}
resource "aws_lb_target_group_attachment" "keycloak-nlb-tg-attachment443" {
  target_group_arn = aws_lb_target_group.keycloak-nlb-ssl-tg.arn
  target_id        = aws_lb.keycloak-alb.arn
  #port             = 8443
  port = 443
}
resource "aws_lb_target_group_attachment" "keycloak-nlb-tg-attachment80" {
  target_group_arn = aws_lb_target_group.keycloak-nlb-tg.arn
  target_id        = aws_lb.keycloak-alb.arn
  port             = 80
}
*/